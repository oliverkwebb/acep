#!/usr/bin/gawk -f
BEGIN {FS = ",";}

function Token_gen(colm){
	delete Var_array; delete Syn_array; delete Ret_Str
	split(colm,Var_array,/[^A-Za-z0-9\$]/,Syn_array)
	index_VA=0; index_SA=0
	for(k=0;k<=length(Var_array)+length(Syn_array);k++){
		if(k%2==0){
			Ret_Str[k]=Var_array[index_VA]
			index_VA=(index_VA+1)%length(Var_array)}
		else{
			Ret_Str[k]=Syn_array[index_SA]
			index_SA=(index_SA+1)%length(Syn_array)}
	}
}

function AST_Gen(){
	for(symbol in Ret_Str){
		AST_Name = Det_Type(Ret_Str[symbol])
		print ResVar(AST_Name)
	}
}

function Det_Type(Sym_Str){
	switch(Sym_Str){
		case /^=$/: return "EQN_BEGIN"; break
		case /^[0-9]+$/: return "NUMBER"":"Sym_Str; break
		case /^[A-Za-z]+[0-9]+$/: return "REF2CELL"":"Sym_Str ; break
		case /^\$[0-9]+$/: return "LOCAL_REF:" Sym_Str; break
		case /^[A-Za-z]+$/: return "FUNCT"":"Sym_Str; break
		case /^\($/: return "CALL_BEGIN"; break
		case /^\)$/: return "CALL_END"; break
		case /^$/: return "BLANK"; break;
		case /^[-\+\*\/%]+/: return "BINOP"":"Sym_Str; break
		default: return "U_SYMBOL"; break
	}
}

function ResVar(AST_Symbol){
	Resolve_Flag=0
	switch(AST_Symbol){
		case /^LOCAL_REF/: Resolve_Flag = 1; break;
		case /^REF2CELL/: Resolve_Flag = 2; break;
		default: Resolve_Flag = 0; break;
	}
	while(1){
		if(Resolve_Flag==0){Res_Symbol=AST_Symbol; break;}
		else if(Resolve_Flag==1){
			delete TMP_array
			split(AST_Symbol,TMP_array,/\$/)
			Res_Symbol=$TMP_array[2]
			Resolve_Flag=0#ResVar(Det_Type(Res_Symbol))
			break;
		}
		else if(Resolve_Flag==2){
			print "Global Cell Searching Currently Not Supported"
			Resolve_Flag=0
		}
	}
	return Res_Symbol;
}

{
	if(FILENAME == "-"){print "??NOFILE??"; exit}
	for(i=1;i<=NF;i++) if($i ~ /^=/){ 
		Token_gen($i); AST_Gen()
	}
}
